{"version":3,"sources":["componenets/barchart/bar.js","componenets/piechart/pie.js","componenets/togglechart/togglechart.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","data","chartData","labels","Object","keys","datasets","label","borderColor","backgroundColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","className","options","maintainAspectRatio","title","display","text","fontSize","tooltips","bodyFontSize","titleFontSize","displayColors","titleFontColor","legend","scales","xAxes","ticks","yAxes","PieChart","dataLen","reduce","a","b","callbacks","tooltipItem","percent","toFixed","plugins","render","fontColor","precision","overlap","ToggleChart","clickedCenter","clickedCategory","useState","showingAlert","setShowingAlert","useEffect","handleShowAlert","setTimeout","type","id","name","defaultChecked","onClick","htmlFor","defaults","global","defaultColor","defaultFontColor","defaultFontFamily","App","category","setCategory","center","setCenter","showCategoryChart","setCateryChart","showCenterChart","setCenterChart","axios","get","response","alert","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f9d3d24.chunk.js","sourcesContent":["import { HorizontalBar } from 'react-chartjs-2'\n\nimport './bar.css'\nfunction BarChart({ data }) {\n    const chartData = data\n        ? {\n              labels: Object.keys(data),\n              datasets: [\n                  {\n                      label: '# of Patents',\n                      borderColor: '#22cd59',\n                      backgroundColor: '#137633',\n                      borderWidth: 1,\n                      hoverBackgroundColor: '#22cd59',\n                      hoverBorderColor: '#22cd59',\n                      data: Object.values(data),\n                  },\n              ],\n          }\n        : []\n    return (\n        <div className='barchart'>\n            <HorizontalBar\n                data={chartData}\n                options={{\n                    maintainAspectRatio: true,\n                    title: {\n                        display: true,\n                        text: 'Number of Patents per Portfolio Category',\n                        fontSize: 30,\n                    },\n                    tooltips: {\n                        bodyFontSize: 20,\n                        titleFontSize: 18,\n                        displayColors: false,\n                        titleFontColor: '#22cd59',\n                    },\n                    legend: {\n                        display: false,\n                    },\n                    scales: {\n                        xAxes: [\n                            {\n                                ticks: {\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                        yAxes: [\n                            {\n                                ticks: {\n                                    fontSize: 18,\n                                },\n                            },\n                        ],\n                    },\n                }}\n            />\n        </div>\n    )\n}\n\nexport default BarChart\n","import { Pie } from 'react-chartjs-2'\nimport 'chartjs-plugin-labels'\nimport './pie.css'\n\nfunction PieChart({ data }) {\n    const dataLen = data ? Object.values(data).reduce((a, b) => a + b, 0) : 0\n    const chartData = data\n        ? {\n              labels: Object.keys(data),\n              datasets: [\n                  {\n                      borderColor: '#22cd59',\n                      backgroundColor: 'black',\n                      borderWidth: 1,\n                      hoverBackgroundColor: '#137633',\n                      hoverBorderColor: '22cd59',\n                      data: Object.values(data),\n                  },\n              ],\n          }\n        : []\n\n    return (\n        <div className='piechart'>\n            <Pie\n                data={chartData}\n                options={{\n                    maintainAspectRatio: true,\n                    title: {\n                        display: true,\n                        text: 'Number of Patents per NASA Center',\n                        fontSize: 30,\n                    },\n                    tooltips: {\n                        callbacks: {\n                            title: function (tooltipItem, data) {\n                                return (\n                                    'NASA Center: ' +\n                                    data['labels'][tooltipItem[0]['index']]\n                                )\n                            },\n                            label: function (tooltipItem, data) {\n                                var dataset = data['datasets'][0]\n                                var percent =\n                                    (dataset['data'][tooltipItem['index']] /\n                                        dataLen) *\n                                    100\n\n                                return (\n                                    '# of Patents:' +\n                                    data['datasets'][0]['data'][\n                                        tooltipItem['index']\n                                    ] +\n                                    ' (' +\n                                    percent.toFixed(2) +\n                                    '%)'\n                                )\n                            },\n                        },\n                        bodyFontSize: 20,\n                        titleFontSize: 18,\n                        titleFontColor: '#22cd59',\n                        displayColors: false,\n                    },\n                    legend: {\n                        display: false,\n                    },\n                    plugins: {\n                        labels: {\n                            render: 'label',\n                            fontColor: '#0cf155',\n                            fontSize: 22,\n                            precision: 1,\n                            overlap: false,\n                        },\n                    },\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PieChart\n","import { useEffect, useState } from 'react'\nimport './togglechart.css'\n\nfunction ToggleChart({ clickedCenter, clickedCategory }) {\n    const [showingAlert, setShowingAlert] = useState(true)\n\n    useEffect(() => {\n        handleShowAlert()\n    }, [])\n\n    const handleShowAlert = () => {\n        setTimeout(() => {\n            setShowingAlert(false)\n        }, 3500)\n    }\n\n    return (\n        <div className='togglechart'>\n            <div className={`${showingAlert ? 'typewriter' : 'hide-welcome'}`}>\n                <div className='typewriter-text'>Welcome...</div>\n            </div>\n            <div\n                className={`${showingAlert ? 'hide-welcome' : 'show-welcome'}`}>\n                <h2>NASA Patent Portfolio </h2>\n                <div className='btnContainer'>\n                    <div className='tab'>\n                        <input\n                            type='radio'\n                            id='tab-1'\n                            name='tab-group-1'\n                            defaultChecked\n                            onClick={clickedCategory}\n                        />\n                        <label htmlFor='tab-1' id='label1'>\n                            Category\n                        </label>\n                    </div>\n\n                    <div className='tab' id='tab2'>\n                        <input\n                            type='radio'\n                            id='tab-2'\n                            name='tab-group-1'\n                            onClick={clickedCenter}\n                        />\n                        <label htmlFor='tab-2'>Center</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ToggleChart\n","import './App.css'\nimport { useEffect, useState } from 'react'\nimport { defaults } from 'react-chartjs-2'\nimport axios from 'axios'\nimport BarChart from './componenets/barchart/bar'\nimport PieChart from './componenets/piechart/pie'\nimport ToggleChartSwitch from './componenets/togglechart/togglechart'\n\ndefaults.global.defaultColor = '#22cd59'\ndefaults.global.defaultFontColor = '#22cd59'\ndefaults.global.defaultFontFamily = 'Retro'\n\nfunction App() {\n    const [category, setCategory] = useState([])\n    const [center, setCenter] = useState([])\n    const [showCategoryChart, setCateryChart] = useState(true)\n    const [showCenterChart, setCenterChart] = useState(false)\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const response = await axios.get(\n                    'http://localhost:3003/api/metrics',\n                )\n                setCategory(response.data.category)\n                setCenter(response.data.center)\n            } catch (err) {\n                alert(err)\n            }\n        }\n\n        fetchData()\n    }, [])\n\n    const handleCenterClick = () => {\n        setCateryChart(false)\n        setCenterChart(true)\n    }\n    const handleCategoryClick = () => {\n        setCateryChart(true)\n        setCenterChart(false)\n    }\n\n    return (\n        <div className='App'>\n            <header className='container'>\n                <ToggleChartSwitch\n                    clickedCategory={handleCategoryClick}\n                    clickedCenter={handleCenterClick}\n                />\n                {showCategoryChart && <BarChart data={category} />}\n                {showCenterChart && <PieChart data={center} />}\n            </header>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}